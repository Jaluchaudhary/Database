-- Task 2 Create database by Jalu--
DROP DATABASE IF EXISTS CLASS;
CREATE DATABASE IF NOT EXISTS CLASS;
USE CLASS;
SHOW DATABASES;

DROP DATABASE IF EXISTS STUDENT;
CREATE DATABASE IF NOT EXISTS STUDENT;
USE STUDENT;
SHOW DATABASES;

DROP DATABASE IF EXISTS TEACHER;
CREATE DATABASE IF NOT EXISTS TEACHER;
USE TEACHER;
SHOW DATABASES;

DROP DATABASE IF EXISTS PARENT;
CREATE DATABASE IF NOT EXISTS PARENT;
USE PARENT;
SHOW DATABASES;
-- Task 3 create table database by Jalu --
SHOW TABLES; 
CREATE TABLE CLASS( 
CLASS_id int primary key,
CLASS_CODE VARCHAR (25) NOT NULL,
GROUP_COLOR VARCHAR(30) NOT NULL,
AGE_LEVEL VARCHAR(30) NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
CLASS_ROOM_NUM CHAR(12) NOT NULL,
PHONE_NUM CHAR(14)NOT NULL UNIQUE,
CLASS_LOCATION VARCHAR(100) NOT NULL);
SHOW TABLES;
DESCRIBE CLASS;

CREATE TABLE STUDENT( 
STUDENT_id int primary key,
fIRST_NAME VARCHAR (15) NOT NULL,
MIDDLE_NAME VARCHAR(15),
LAST_NAME VARCHAR(15) NOT NULL,
NICKNAME VARCHAR(10),
ADDRESS VARCHAR(15)NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
ZIP_CODE VARCHAR(30) NOT NULL);
SHOW TABLES;
DESCRIBE STUDENT;

CREATE TABLE TEACHER( 
TEACHER_id int primary key,
fIRST_NAME VARCHAR (25) NOT NULL,
MIDDLE_NAME VARCHAR(25),
LAST_NAME VARCHAR(25) NOT NULL,
PHONE CHAR(14) NOT NULL UNIQUE,
WORK_PHONE CHAR(14)NOT NULL UNIQUE,
EMAIL VARCHAR(30)NOT NULL UNIQUE,
WORK_EMAIL VARCHAR(30)NOT NULL UNIQUE,
DEGREE VARCHAR(25) NOT NULL);
SHOW TABLES;
DESCRIBE TEACHER;

CREATE TABLE PARENT( 
PARENT_id int primary key,
fIRST_NAME VARCHAR (25) NOT NULL,
MIDDLE_NAME VARCHAR(25),
LAST_NAME VARCHAR(25) NOT NULL,
PHONE CHAR(14) NOT NULL UNIQUE,
MOBILE_PHONE CHAR(14)NOT NULL UNIQUE,
EMAIL VARCHAR(30)NOT NULL UNIQUE);
SHOW TABLES;
DESCRIBE PARENT;

-- Task 4 add data by Jalu--
INSERT INTO CLASS VALUES 
(1, 'Math101', 'Blue', 'High School', '2005-05-10', 'Room A101', '1234567890', 'Building A, Floor 1'),
(2, 'Eng202', 'Red', 'Middle School', '2007-08-15', 'Room B202', '1987654321', 'Building B, Floor 2');
SELECT * FROM CLASS;

INSERT INTO STUDENT VALUES 
(1, 'John', 'Robert', 'Doe', 'JR', '123 Main St', '2004-03-20', '12345'),
(2, 'Jane', 'Marie', 'Smith', 'None', '456 Elm St', '2006-07-12', '67890');
SELECT * FROM STUDENT;

INSERT INTO TEACHER VALUES
(1, 'Alice', 'Anne', 'Johnson', '1122334455', '9988776655', 'alice@gmail.com', 'alice@mason.com', 'Ph.D.'),
(2, 'Bob', 'William', 'Miller', '4433221155', '5566778899', 'bob@gmail.com', 'bob@mason.com', 'M.Ed.');
SELECT* FROM TEACHER;

INSERT INTO PARENT VALUES
(1, 'Michael', 'James', 'Smith', '1234567890', '1987654321', 'michael@GMAIL.com'),
(2, 'Emily', 'Anne', 'Johnson', '9876543210', '1234987650', 'emily@gmail.com');
SELECT* FROM PARENT;

-- task 5 by Jalu--
-- List all students' names, age levels, class color, room, and teacher's name--
SELECT Students.STUDENT_id AS Student, CLASS.AGE_LEVEL AS Level, CLASS.GROUP_COLOR AS Color, CLASS.CLASS_ROOM_NUM AS Room, TEACHER.fIRST_NAME AS Teacher
FROM STUDENT
JOIN CLASS ON STUDENT.STUDENT_id = CLASS.CLASS_id
JOIN TEACHER ON CLASS.CLASS_id = TEACHER.TEACHER_id
ORDER BY Student;
-- List students alphabetically per class level and color with nicknames--
SELECT CLASS.GROUP_COLOR AS Color, CLASS.AGE_LEVEL AS Level, STUDENT.fIRST_NAME AS 'Student Name', STUDENT.NICKNAME AS Nickname
FROM CLASS
JOIN STUDENT ON CLASS.CLASS_id = STUDENT.STUDENT_id
ORDER BY CLASS.GROUP_COLOR, CLASS.AGE_LEVEL, STUDENT.fIRST_NAME;